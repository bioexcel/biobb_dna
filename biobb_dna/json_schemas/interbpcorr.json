{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://bioexcel.eu/biobb_dna/json_schemas/1.0/interbpcorr",
    "name": "biobb_dna InterBasePairCorrelation",
    "title": "Calculate correlation between all base pairs of a single sequence and for a single helical parameter.",
    "description": null,
    "type": "object",
    "info": {
        "wrapped_software": {
            "name": "In house",
            "license": "Apache-2.0"
        },
        "ontology": {
            "name": "EDAM",
            "schema": "http://edamontology.org/EDAM.owl"
        }
    },
    "required": [
        "input_filename_shift",
        "input_filename_slide",
        "input_filename_rise",
        "input_filename_tilt",
        "input_filename_roll",
        "input_filename_twist",
        "output_csv_path",
        "output_jpg_path"
    ],
    "properties": {
        "input_filename_shift": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'shift'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'shift'",
                    "edam": "format_2330"
                }
            ]
        },
        "input_filename_slide": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'slide'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'slide'",
                    "edam": "format_2330"
                }
            ]
        },
        "input_filename_rise": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'rise'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'rise'",
                    "edam": "format_2330"
                }
            ]
        },
        "input_filename_tilt": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'tilt'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'tilt'",
                    "edam": "format_2330"
                }
            ]
        },
        "input_filename_roll": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'roll'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'roll'",
                    "edam": "format_2330"
                }
            ]
        },
        "input_filename_twist": {
            "type": "string",
            "description": "Path to .ser file with data for helical parameter 'twist'",
            "filetype": "input",
            "sample": null,
            "enum": [
                ".*\\.ser$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.ser$",
                    "description": "Path to .ser file with data for helical parameter 'twist'",
                    "edam": "format_2330"
                }
            ]
        },
        "output_csv_path": {
            "type": "string",
            "description": "Path to directory where output is saved",
            "filetype": "output",
            "sample": null,
            "enum": [
                ".*\\.csv$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.csv$",
                    "description": "Path to directory where output is saved",
                    "edam": "format_3752"
                }
            ]
        },
        "output_jpg_path": {
            "type": "string",
            "description": "Path to .jpg file where output is saved",
            "filetype": "output",
            "sample": null,
            "enum": [
                ".*\\.jpg$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.jpg$",
                    "description": "Path to .jpg file where output is saved",
                    "edam": "format_3579"
                }
            ]
        },
        "properties": {
            "type": "object",
            "properties": {
                "sequence": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Nucleic acid sequence for the input .ser file. Length of sequence is expected to be the same as the total number of columns in the .ser file, minus the index column (even if later on a subset of columns is selected with the *seqpos* option)."
                },
                "seqpos": {
                    "type": "array",
                    "default": null,
                    "wf_prop": false,
                    "description": "list of sequence positions (columns indices starting by 0) to analyze.  If not specified it will analyse the complete sequence."
                },
                "remove_tmp": {
                    "type": "boolean",
                    "default": true,
                    "wf_prop": true,
                    "description": "Remove temporal files."
                },
                "restart": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": true,
                    "description": "Do not execute if output files exist."
                }
            }
        }
    },
    "additionalProperties": false
}